# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
top_builddir = ..
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
subdir = lua
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/libfiretalk/firetalk.m4 \
	$(top_srcdir)/src/naim.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/src/config.h
CONFIG_CLEAN_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
liblua_la_DEPENDENCIES =
am__dirstamp = $(am__leading_dot)dirstamp
am_liblua_la_OBJECTS = liblua/lapi.lo liblua/lcode.lo liblua/ldebug.lo \
	liblua/ldo.lo liblua/ldump.lo liblua/lfunc.lo liblua/lgc.lo \
	liblua/llex.lo liblua/lmem.lo liblua/lobject.lo \
	liblua/lopcodes.lo liblua/lparser.lo liblua/lstate.lo \
	liblua/lstring.lo liblua/ltable.lo liblua/ltm.lo \
	liblua/lundump.lo liblua/lvm.lo liblua/lzio.lo \
	liblua/lauxlib.lo liblua/lbaselib.lo liblua/ldblib.lo \
	liblua/liolib.lo liblua/lmathlib.lo liblua/loslib.lo \
	liblua/ltablib.lo liblua/lstrlib.lo liblua/loadlib.lo \
	liblua/linit.lo moon.lo moon_conn.lo moon_strings.lo
liblua_la_OBJECTS = $(am_liblua_la_OBJECTS)
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)/src
depcomp =
am__depfiles_maybe =
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) --tag=CC --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(LIBTOOL) --tag=CC --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(liblua_la_SOURCES)
DIST_SOURCES = $(liblua_la_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
pkgincludedir = @pkgincludedir@
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AR = @AR@
AS = @AS@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CFLAGS = @CFLAGS@
CONVENIENCE_LTDL_FALSE = @CONVENIENCE_LTDL_FALSE@
CONVENIENCE_LTDL_TRUE = @CONVENIENCE_LTDL_TRUE@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CURSESLIB = @CURSESLIB@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
CYGWIN_FALSE = @CYGWIN_FALSE@
CYGWIN_TRUE = @CYGWIN_TRUE@
DEFS = @DEFS@
DLLTOOL = @DLLTOOL@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
INCLTDL = @INCLTDL@
INSTALLCYGWINDOC_FALSE = @INSTALLCYGWINDOC_FALSE@
INSTALLCYGWINDOC_TRUE = @INSTALLCYGWINDOC_TRUE@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_LTDL_FALSE = @INSTALL_LTDL_FALSE@
INSTALL_LTDL_TRUE = @INSTALL_LTDL_TRUE@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBADD_DL = @LIBADD_DL@
LIBLTDL = @LIBLTDL@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
NETLIB = @NETLIB@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
ac_ct_AR = @ac_ct_AR@
ac_ct_AS = @ac_ct_AS@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DLLTOOL = @ac_ct_DLLTOOL@
ac_ct_F77 = @ac_ct_F77@
ac_ct_OBJDUMP = @ac_ct_OBJDUMP@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__leading_dot = @am__leading_dot@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
cygwindocdir = @cygwindocdir@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pkgdocdir = @pkgdocdir@
pkgmoddir = @pkgmoddir@
pkgtarball = @pkgtarball@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
DISTCLEANFILES = \
	default_lua.h

EXTRA_DIST = \
	cmpllua.sh \
	default.lua \
	examples/eliza.lua \
	examples/testnaim.lua

noinst_LTLIBRARIES = liblua.la
liblua_la_SOURCES = \
	liblua/lapi.c liblua/lcode.c liblua/ldebug.c liblua/ldo.c liblua/ldump.c liblua/lfunc.c liblua/lgc.c liblua/llex.c liblua/lmem.c \
	liblua/lobject.c liblua/lopcodes.c liblua/lparser.c liblua/lstate.c liblua/lstring.c liblua/ltable.c liblua/ltm.c \
	liblua/lundump.c liblua/lvm.c liblua/lzio.c liblua/lauxlib.c liblua/lbaselib.c liblua/ldblib.c liblua/liolib.c \
	liblua/lmathlib.c liblua/loslib.c liblua/ltablib.c liblua/lstrlib.c liblua/loadlib.c liblua/linit.c liblua/lapi.h \
	liblua/ldebug.h liblua/lgc.h liblua/lmem.h liblua/lparser.h liblua/ltable.h liblua/luaconf.h liblua/lvm.h liblua/lauxlib.h \
	liblua/ldo.h liblua/llex.h liblua/lobject.h liblua/lstate.h liblua/ltm.h liblua/lualib.h liblua/lzio.h liblua/lcode.h \
	liblua/lfunc.h liblua/llimits.h liblua/lopcodes.h liblua/lstring.h liblua/lua.h liblua/lundump.h \
	moon.c moon_conn.c moon_strings.c moon-int.h

liblua_la_LIBADD = -lm
INCLUDES = -I${srcdir}/liblua
all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  --ignore-deps lua/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  --ignore-deps lua/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
liblua/$(am__dirstamp):
	@$(mkdir_p) liblua
	@: > liblua/$(am__dirstamp)
liblua/lapi.lo: liblua/$(am__dirstamp)
liblua/lcode.lo: liblua/$(am__dirstamp)
liblua/ldebug.lo: liblua/$(am__dirstamp)
liblua/ldo.lo: liblua/$(am__dirstamp)
liblua/ldump.lo: liblua/$(am__dirstamp)
liblua/lfunc.lo: liblua/$(am__dirstamp)
liblua/lgc.lo: liblua/$(am__dirstamp)
liblua/llex.lo: liblua/$(am__dirstamp)
liblua/lmem.lo: liblua/$(am__dirstamp)
liblua/lobject.lo: liblua/$(am__dirstamp)
liblua/lopcodes.lo: liblua/$(am__dirstamp)
liblua/lparser.lo: liblua/$(am__dirstamp)
liblua/lstate.lo: liblua/$(am__dirstamp)
liblua/lstring.lo: liblua/$(am__dirstamp)
liblua/ltable.lo: liblua/$(am__dirstamp)
liblua/ltm.lo: liblua/$(am__dirstamp)
liblua/lundump.lo: liblua/$(am__dirstamp)
liblua/lvm.lo: liblua/$(am__dirstamp)
liblua/lzio.lo: liblua/$(am__dirstamp)
liblua/lauxlib.lo: liblua/$(am__dirstamp)
liblua/lbaselib.lo: liblua/$(am__dirstamp)
liblua/ldblib.lo: liblua/$(am__dirstamp)
liblua/liolib.lo: liblua/$(am__dirstamp)
liblua/lmathlib.lo: liblua/$(am__dirstamp)
liblua/loslib.lo: liblua/$(am__dirstamp)
liblua/ltablib.lo: liblua/$(am__dirstamp)
liblua/lstrlib.lo: liblua/$(am__dirstamp)
liblua/loadlib.lo: liblua/$(am__dirstamp)
liblua/linit.lo: liblua/$(am__dirstamp)
liblua.la: $(liblua_la_OBJECTS) $(liblua_la_DEPENDENCIES) 
	$(LINK)  $(liblua_la_LDFLAGS) $(liblua_la_OBJECTS) $(liblua_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f liblua/lapi.$(OBJEXT)
	-rm -f liblua/lapi.lo
	-rm -f liblua/lauxlib.$(OBJEXT)
	-rm -f liblua/lauxlib.lo
	-rm -f liblua/lbaselib.$(OBJEXT)
	-rm -f liblua/lbaselib.lo
	-rm -f liblua/lcode.$(OBJEXT)
	-rm -f liblua/lcode.lo
	-rm -f liblua/ldblib.$(OBJEXT)
	-rm -f liblua/ldblib.lo
	-rm -f liblua/ldebug.$(OBJEXT)
	-rm -f liblua/ldebug.lo
	-rm -f liblua/ldo.$(OBJEXT)
	-rm -f liblua/ldo.lo
	-rm -f liblua/ldump.$(OBJEXT)
	-rm -f liblua/ldump.lo
	-rm -f liblua/lfunc.$(OBJEXT)
	-rm -f liblua/lfunc.lo
	-rm -f liblua/lgc.$(OBJEXT)
	-rm -f liblua/lgc.lo
	-rm -f liblua/linit.$(OBJEXT)
	-rm -f liblua/linit.lo
	-rm -f liblua/liolib.$(OBJEXT)
	-rm -f liblua/liolib.lo
	-rm -f liblua/llex.$(OBJEXT)
	-rm -f liblua/llex.lo
	-rm -f liblua/lmathlib.$(OBJEXT)
	-rm -f liblua/lmathlib.lo
	-rm -f liblua/lmem.$(OBJEXT)
	-rm -f liblua/lmem.lo
	-rm -f liblua/loadlib.$(OBJEXT)
	-rm -f liblua/loadlib.lo
	-rm -f liblua/lobject.$(OBJEXT)
	-rm -f liblua/lobject.lo
	-rm -f liblua/lopcodes.$(OBJEXT)
	-rm -f liblua/lopcodes.lo
	-rm -f liblua/loslib.$(OBJEXT)
	-rm -f liblua/loslib.lo
	-rm -f liblua/lparser.$(OBJEXT)
	-rm -f liblua/lparser.lo
	-rm -f liblua/lstate.$(OBJEXT)
	-rm -f liblua/lstate.lo
	-rm -f liblua/lstring.$(OBJEXT)
	-rm -f liblua/lstring.lo
	-rm -f liblua/lstrlib.$(OBJEXT)
	-rm -f liblua/lstrlib.lo
	-rm -f liblua/ltable.$(OBJEXT)
	-rm -f liblua/ltable.lo
	-rm -f liblua/ltablib.$(OBJEXT)
	-rm -f liblua/ltablib.lo
	-rm -f liblua/ltm.$(OBJEXT)
	-rm -f liblua/ltm.lo
	-rm -f liblua/lundump.$(OBJEXT)
	-rm -f liblua/lundump.lo
	-rm -f liblua/lvm.$(OBJEXT)
	-rm -f liblua/lvm.lo
	-rm -f liblua/lzio.$(OBJEXT)
	-rm -f liblua/lzio.lo

distclean-compile:
	-rm -f *.tab.c

.c.o:
	$(COMPILE) -c -o $@ $<

.c.obj:
	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf liblua/.libs liblua/_libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(mkdir_p) $(distdir)/examples
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-rm -f liblua/$(am__dirstamp)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-info-am

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-generic \
	clean-libtool clean-noinstLTLIBRARIES ctags distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-exec \
	install-exec-am install-info install-info-am install-man \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am tags uninstall uninstall-am \
	uninstall-info-am


default_lua.h: ${srcdir}/default.lua
	AWK="${AWK}" CPP="${CPP} ${CPPFLAGS} ${DEFAULT_INCLUDES} ${INCLUDES} ${DEFS}" ${srcdir}/cmpllua.sh < ${srcdir}/default.lua > default_lua.h

moon.lo: ${srcdir}/moon.c default_lua.h
	@echo $(LTCOMPILE) -I${top_srcdir}/include -I${top_srcdir}/src -I${top_srcdir}/libfiretalk -c -o $@ `test -f 'moon.c' || echo '$(srcdir)/'`moon.c
	@$(LTCOMPILE) -I${top_srcdir}/include -I${top_srcdir}/src -I${top_srcdir}/libfiretalk -c -o $@ `test -f 'moon.c' || echo '$(srcdir)/'`moon.c

moon_conn.lo: ${srcdir}/moon_conn.c
	@echo $(LTCOMPILE) -I${top_srcdir}/include -I${top_srcdir}/src -I${top_srcdir}/libfiretalk -c -o $@ `test -f 'moon_conn.c' || echo '$(srcdir)/'`moon_conn.c
	@$(LTCOMPILE) -I${top_srcdir}/include -I${top_srcdir}/src -I${top_srcdir}/libfiretalk -c -o $@ `test -f 'moon_conn.c' || echo '$(srcdir)/'`moon_conn.c

moon_strings.lo: ${srcdir}/moon_strings.c
	@echo $(LTCOMPILE) -I${top_srcdir}/include -I${top_srcdir}/src -I${top_srcdir}/libfiretalk -c -o $@ `test -f 'moon_strings.c' || echo '$(srcdir)/'`moon_strings.c
	@$(LTCOMPILE) -I${top_srcdir}/include -I${top_srcdir}/src -I${top_srcdir}/libfiretalk -c -o $@ `test -f 'moon_strings.c' || echo '$(srcdir)/'`moon_strings.c
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
