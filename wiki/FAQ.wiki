=General=
==How do I send an IM? &bull; How do I add someone to my buddy list?==
To simply send a message to someone who is not in your buddy list, just type /msg
buddyname hello there. However, if you would like to engage in a conversation with
someone, you should first add them to your buddy list and create a window for them. Just
type /addbuddy buddyname or /addbuddy "buddy name" to add them to your list. If they are
online, a window will be created automatically for them. If they are not online, you can
type /open buddyname to open a window for them manually.

Once a window has been opened for a buddy, you can use the Tab, Home, and End keys to
cycle through your list of windows to find them, or type /jump buddyname to go directly to
their window. Once you are in their window, anything you type that doesn't start with a
"/" will be sent to them as a message. If the buddy is not online when you type your
message, the message will be saved and sent the next time your buddy signs on. 

=Navigation=
==How do I get the buddy list or status window to come back?==
The window list window and the status window both default to autohide mode: Whenever
either one of them changes, they will appear on the screen for $autohide seconds, then
disappear again. However, if you would like to make the window list window stay visible
permanently, you can use F4 or Ctrl-F to cycle between autohide, always hidden, and always
visible modes. There is also a /winlist command which will allow you to specify a setting
to use in your .naimrc file.

==Are there any short cuts to help make talking to multiple people easier?==
naim separates each conversation into a different window, which you can cycle through
using Tab, Home, End, and the /jump command. Your windows will be listed in the window
list window in the upper-right corner of your screen, which is usually hidden when you're
talking to someone. However, if you are in buddyA's window, and buddyC sends you a
message, the window list window will unhide itself, buddyC's name will appear in yellow,
and the []'s around his name will turn into ()'s. This means buddyC's window has changed
since the last time you have seen it. In order to make chatting with multiple buddies
easier, the /jump command will take you to the next "yellow" buddy if no name is provided.
Therefore, if you send a message to buddyA and are waiting for a response, and buddyC
sends you an IM in the meantime, you can just type /jump to take you directly to buddyC's
window. If buddyA sends you a message while you are then talking to buddyC, typing /jump
again will take you back to buddyA's window.

The keys F8 and Ctrl-N do the same thing as typing /jump with no arguments, to make
chatting even easier.

==How can I jump to the beginning of the line when running naim in screen?==
Under normal convention, Ctrl-A jumps to the beginning of the input line and Ctrl-E jumps
to the end. GNU Screen uses the Ctrl-A key for detaching, switching windows, etc. To jump
to the beginning of the line when running naim under screen, simply press Ctrl-A a (that
is, hold Ctrl, press 'a', let go of Ctrl, and press 'a' a second time).

==When using /bind, what keys are A1, A3, B2, C1, and C3?==
According to the ncurses header file, these keys correspond to the Home, End, PgUp, and
PgDn keys on the numeric keypad, as such:
{{{
/* The keypad is arranged like this: */
/* a1    up    a3   */
/* left   b2  right  */
/* c1   down   c3   */
}}}

I have never used a computer keyboard which used these bindings instead of KEY_PGUP, etc.,
but I included them in naim's /bind "just in case."

==Is there a way to go backwards in my buddy list?==
Home, Alt-Tab, and Shift-Tab will cycle backwards through your window list.

However, on my system at least, Shift-Tab generates the same control sequence as Tab by
itself. Typing:
{{{
loadkeys -d
keycode 15 = Tab Tab
alt keycode 15 = Meta_Tab
shift keycode 15 = F26
string F26 ="\033[Z"
}}}

into the command prompt on my machine before running naim allows Shift-Tab to work like
Home. This affects other curses programs (including Lynx) as well, so you may consider
adding that to your system boot scripts.

=Configuration=
==How can I configure naim?==
Many aspects of naim's operation are configurable through the use of variables, such as
$autohide (which controls how long the status window and window list window will appear on
the screen when one changes). To change these variables, use the /set command. For
example, to make both windows wait around for 10 seconds, instead of the default 3, just
type /set autohide 10.

For most other configurable pieces, there are specific /-commands to use, which will be
described in /help commands. For example, to add me to to your buddy list, just type
/addbuddy nmlorg or /addbuddy "n ml org".

==Is there a way to have naim save my configuration settings for the next time I start
naim? &bull; Where can I get an example .naimrc (naim configuration file)?==
naim will read start-up commands from a file called .naimrc in your home directory, so all
of your configuration commands can be placed there.

naim includes a /save command, which will attempt to create a suitable .naimrc file based
on your current settings. So, once you have configured naim to your liking, just type
/save and naim will use the same settings the next time it starts up (including your buddy
list, channels you have joined on IRC, etc.). The generated .naimrc is also
auto-documented, so feel free to use /save to create a "default" .naimrc, and customize it
by hand using a text editor.

You can /set autosave 1 to have naim automatically write .naimrc whenever you /quit

==How do I configure naim to be nice with GNU Screen?==
Solution under Console Display Issues applies.

==Is it possible to disable the timestamps every 30 minutes?==
Type /set tprint 0.

==Is there a way to disable sounds in naim?==
The only sounds naim should make are for $beeponim or $beeponsignon, so you can just /set
beeponim 0, etc. to shut them off.

==How do I change the colors?==
The /setcol command will let you manipulate the colors. Type /setcol by itself to see what
the current values are, then /setcol buddy blue, etc. to change them.

==Does naim support inverse/blinking text, or changing the background for specific buddy
types separately from the whole buddy list?==
At present, no. If enough people request that ability, I will add it to the next release.

==Why do some people I talk to have colored text?==
naim's default behavior is to honor  tags sent by other users, which can unfortunately
lead to situations in which the other user has chosen a font color that clashes with your
background. You can either use the /setcol command to change your own background, ask them
to pick a less offensive foreground, or /set color 0 in naim to disable  tag processing.

=Profiles=
==How can I get someone's profile?==
naim includes a /whois (/wi, /info) command to retrieve all information AIM keeps on AIM
users, including the profile. Unfortunately, AOL users' profiles are not visible to AIM
users through any mechanism.

==How can I set my own profile?==
If you have a file called .naimprofile in your home directory when naim starts, naim will
use its contents instead of the built-in default. You can send SIGHUP (killall -HUP naim)
from the command line or type /readprofile .naimprofile while naim is running to reload
your .naimprofile.

==Is there a way to view a user's away message other than sending them a message?==
Unfortunately, the TOC protocol does not appear to have such a capability. naim uses a
workaround (it puts your away message in your profile when you go /away), so naim can view
other naim users' away messages, but I am unfamiliar with any mechanism to retrieve a
WinAIM, etc. user's message (other than sending them an IM and hoping they send back an
autoresponse).

==How does Gaim get the away message when you do the GetInfo? Why does naim use TOC
instead of Oscar? Isn't Oscar newer?==
Many other AIM clients use an alternative protocol, Oscar, which does have this
capability. The original AIM protocol was Oscar, and AOL later created TOC to serve the
needs of their Java client. In 1998 AOL released a public document specifying details of
the TOC protocol, for use by third-party clients such as naim. Since then, they have made
many significant changes to the Oscar protocol to discourage third-party client
maintainers from using Oscar. It is possible for third-party clients to use the Oscar
protocol, but I would prefer to spend my time working on new features to spending it in
keeping up with AOL's latest protocol revisions, rush-testing new releases, and
publicizing the problem and availability of corrected versions.